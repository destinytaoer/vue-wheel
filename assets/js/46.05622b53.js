(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{333:function(t,a,s){"use strict";s.r(a);var n=s(0),e=Object(n.a)({},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"参与开发"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参与开发","aria-hidden":"true"}},[t._v("#")]),t._v(" 参与开发")]),t._v(" "),s("p",[t._v("首先，fork 本项目到你的账号中，然后 clone 下你 fork 的项目到本地。")]),t._v(" "),s("p",[t._v("在你完成一个模块或修复一个 bug 之后，保证代码无 bug 的前提下，提交 merge request。")]),t._v(" "),s("h2",{attrs:{id:"项目启动"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#项目启动","aria-hidden":"true"}},[t._v("#")]),t._v(" 项目启动")]),t._v(" "),s("p",[t._v("启动项目：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" serve\n")])])]),s("p",[t._v("项目将运行在 localhost:8080，如果 8080 被占用，将运行在 8081 上")]),t._v(" "),s("p",[t._v("运行测试：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" test:unit\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 持续测试")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" test:unit --watch\n")])])]),s("p",[t._v("打包项目：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" build\n")])])]),s("h2",{attrs:{id:"进行开发"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#进行开发","aria-hidden":"true"}},[t._v("#")]),t._v(" 进行开发")]),t._v(" "),s("h3",{attrs:{id:"开发规范"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#开发规范","aria-hidden":"true"}},[t._v("#")]),t._v(" 开发规范")]),t._v(" "),s("ul",[s("li",[t._v("每一个组件完成之后应该抽离为一个独立的分支")]),t._v(" "),s("li",[t._v("每个组件的修改需要提交到相应的分支以及主分支中")]),t._v(" "),s("li",[t._v("细化 commit，形成 commit 即开发过程的核心思想")]),t._v(" "),s("li",[t._v("每一个组件都必须编写相应的测试用例，保证代码的可测试以及功能的完整")]),t._v(" "),s("li",[t._v("每次修改完成需要本地测试通过")]),t._v(" "),s("li",[t._v("进行相应文档的更新")])]),t._v(" "),s("p",[t._v("commit 规范：")]),t._v(" "),s("ul",[s("li",[t._v("开头以方括号表示模块，如 "),s("code",[t._v("[button] 完成组件样式")])]),t._v(" "),s("li",[t._v("每次提交应当只提交一个模块的修改")]),t._v(" "),s("li",[t._v("一个模块中做了不同的修改，则使用序号标识，如 "),s("code",[t._v("[button] 1.修复 xxx bug 2. 更改样式")])]),t._v(" "),s("li",[t._v("提交信息尽量简明扼要，可以分开提交的尽量分开提交")])]),t._v(" "),s("h3",{attrs:{id:"文档编辑"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#文档编辑","aria-hidden":"true"}},[t._v("#")]),t._v(" 文档编辑")]),t._v(" "),s("p",[t._v("项目必须文档化，以便让开发者使用，也便于维护。")]),t._v(" "),s("ul",[s("li",[t._v("更新 README 中组件进度")]),t._v(" "),s("li",[t._v("官网中相应文档的更新")])]),t._v(" "),s("p",[t._v("主要说明一下官网文档的更新。")]),t._v(" "),s("p",[t._v("开启官网文档：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" docs:dev\n")])])]),s("p",[t._v("项目将运行在 localhost:8080")]),t._v(" "),s("p",[t._v("以新增组件为例：")]),t._v(" "),s("p",[t._v("（1）添加组件文档\n添加组件之后，首先在 "),s("code",[t._v("docs/components/")]),t._v(" 目录下，创建相应的 md 文件，文件名与组件名一致，尽量使用小写。")]),t._v(" "),s("p",[t._v("（2）增加侧边栏目录")]),t._v(" "),s("p",[t._v("在 "),s("code",[t._v("docs/.vuepress/config.js")]),t._v(" 中添加组件侧边栏目录：")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("module"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//...")]),t._v("\n  themeConfig"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    sidebar"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//...")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        title"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'组件'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        children"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/components/button'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//...添加新组件文档路径")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("blockquote",[s("p",[t._v("注意：修改 config.js、新增文档组件、修改 enhanceApp.js 等文件时，一般需要重新启动才能看到效果。")])]),t._v(" "),s("p",[t._v("（3）全局注册组件")]),t._v(" "),s("p",[t._v("在 "),s("code",[t._v("docs/.vuepress/enhanceApp.js")]),t._v(" 中引入组件文件并注册：")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" Button "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'../../src/Button/Button'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" Vue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" options"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" router"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" siteData "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  Vue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("component")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'d-button'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Button"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("（4）编写组件文档")]),t._v(" "),s("p",[t._v("组件文档目录应该尽量详细，对不同的用法进行分类说明，必须具有实例和实例相应代码的展示，对需要注意的地方一定要进行说明。并且，约定写完一个组件或者写组件的同时，进行文档的编写，防止细节的遗漏。")]),t._v(" "),s("p",[t._v("为了美观，每一个例子应该使用 wrapper 组件包裹，一般例子直接展示组件即可，如果需要展示与数据交互等的组件，那么需要自行在 "),s("code",[t._v("docs/.vuepress/components/")]),t._v(" 下创建一个组件，自行组织逻辑。")]),t._v(" "),s("p",[t._v("目录大致分为：")]),t._v(" "),s("ul",[s("li",[t._v("基本的用法")]),t._v(" "),s("li",[t._v("API 的说明\n"),s("ul",[s("li",[t._v("详细参数")]),t._v(" "),s("li",[t._v("事件")])])]),t._v(" "),s("li",[t._v("其他")])]),t._v(" "),s("h2",{attrs:{id:"npm-包的发布"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#npm-包的发布","aria-hidden":"true"}},[t._v("#")]),t._v(" npm 包的发布")]),t._v(" "),s("h3",{attrs:{id:"本地测试"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#本地测试","aria-hidden":"true"}},[t._v("#")]),t._v(" 本地测试")]),t._v(" "),s("p",[t._v("在发布 npm 包之前，你需要在本地自行使用组件库，测试是否存在问题。")]),t._v(" "),s("p",[t._v("测试时，在本项目中使用 "),s("code",[t._v("yarn link")]),t._v("，然后在测试项目中使用 "),s("code",[t._v("yarn link vue-wheel-1")]),t._v("，之后即可直接测试使用，上述命令只需要初始化一次即可。每次更新本项目中的代码，只需要重新 build 即可。")]),t._v(" "),s("h3",{attrs:{id:"发布正式包"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#发布正式包","aria-hidden":"true"}},[t._v("#")]),t._v(" 发布正式包")]),t._v(" "),s("blockquote",[s("p",[s("strong",[t._v("在发布正式包之前，必须保证本地测试代码无 bug，单元测试全部通过。")])])]),t._v(" "),s("p",[t._v("（1）修改 package.json 中的版本号")]),t._v(" "),s("p",[t._v("版本号约定：")]),t._v(" "),s("ul",[s("li",[t._v("第三位：bug 修复")]),t._v(" "),s("li",[t._v("第二位：新功能发布")]),t._v(" "),s("li",[t._v("第一位：整体重构，大幅度调整")])]),t._v(" "),s("p",[t._v("（2）发布 npm 包")]),t._v(" "),s("p",[t._v("注意如果你使用了淘宝源，需要将源修改为 npm 官方源才能进行发布。")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" publish\n")])])]),s("p",[t._v("（3）建立版本分支")]),t._v(" "),s("p",[t._v("每一次完成发布之后，立即建立一个版本分支，这个分支作为历史，不再做修改")])])},[],!1,null,null,null);a.default=e.exports}}]);